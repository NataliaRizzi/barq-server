{"version":3,"sources":["store/actions.js","ui/orderListItem.js","containers/queue.js","containers/display.js","containers/qrCode.js","ui/popup.js","Dashboard.js","containers/login.js","App.js","serviceWorker.js","store/reducers.js","index.js"],"names":["updateStatus","status","order","type","OrderListItem","state","expanded","statusList","onButtonClick","e","nextIndex","index","_this","findIndex","props","target","name","length","nextStatus","queue","find","orderId","emitStatusUpdate","_this2","this","react_default","a","createElement","className","concat","onClick","value","items","map","item","key","_id","quantity","specialWishes","setState","Component","connect","dispatch","Queue","socket","emit","list","ui_orderListItem","Display","_ref","history","lastItem","filter","QrCode","QRCode_URL","process","REACT_APP_BASE_URL","REACT_APP_PORT","barId","qrcode_react_lib_default","size","PopUp","page","isOpen","updatePage","toggleBlocked","logout","reactjs_popup_es","contentStyle","width","padding","margin","border","overlayStyle","background","offsetY","arrowStyle","height","trigger","closeOnDocumentClick","position","Dashboard","url","switch","MAIN","containers_queue","HISTORY","DISPLAY","containers_display","QRCODE","qrCode","listAllOrders","axios","get","headers","Content-type","authorization","token","then","res","data","updateQueue","post","open","setOpen","componentDidMount","_this$props","io","query","bar","on","newOrder","console","log","addOrder","closeSocket","removeAllListeners","close","componentWillUnmount","ui_popup","Login","onSubmit","placeholder","onChange","pin","loginMessage","App","DASHBOARD","src_Dashboard","LOGIN","containers_login","staffLogin","window","localStorage","clear","preventDefault","location","pathname","replace","decoded","encoded","btoa","Authorization","setItem","catch","err","response","Boolean","hostname","match","initialState","combineReducers","arguments","undefined","action","Number","Object","assign","i","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b458b9b5.chunk.js","sourcesContent":["export const updateQueue = (queue) => ({\n  type:'UPDATE_QUEUE',\n  queue\n});\n\nexport const addOrder = (order) => ({\n  type:'ADD_ORDER',\n  order\n});\n\nexport const updateStatus = (status, order) => ({\n  type:'UPDATE_STATUS',\n  status, order\n});\n\nexport const updatePage = (page) => ({\n  type:'UPDATE_PAGE',\n  page\n});\n\nexport const setOpen = (isOpen) => ({\n  type: 'SET_OPEN',\n  isOpen\n})","import React, { Component } from 'react';\nimport '../styles/orderListItem.css';\n// import SpecialWish from './specialWish.js';\nimport { connect } from 'react-redux';\nimport { updateStatus } from '../store/actions';\n\n\nclass OrderListItem extends Component  {\n  state = {\n    expanded: false\n  }\n\n  statusList = ['paid', 'in preparation', 'ready for pickup', 'delivered']\n  onButtonClick = (e) => {\n    const index = this.statusList.findIndex(status => status === this.props.status)\n    let nextIndex;\n    if (e.target.name === 'back') {\n      nextIndex = index === 0 ? 0 : index - 1;\n    } else {\n      nextIndex = index + 1 === this.statusList.length ? index : index + 1;\n    }\n    const nextStatus = this.statusList[nextIndex];\n    this.props.updateStatus(nextStatus, this.props.queue.find(order => order.orderId === this.props.orderId))\n    this.props.emitStatusUpdate(nextStatus)\n  }\n\n  render() {\n    const { expanded } = this.state;\n    return (\n      <div className={`orderListItem${expanded ? '--expanded' : ''}`}>\n        <button name='back' onClick={this.onButtonClick} className=\"wrapper-back\" value=\"Back\">\n          Back\n        </button>\n        <div className={`wrapper-list${expanded ? '--expanded' : ''}`}>\n          <h2>#{this.props.orderId}</h2> \n          {\n            this.props.items.map(item => {\n              return <div key={item._id} className=\"item\">{item.name} x {item.quantity}</div>\n            })\n          }\n          <p>{this.props.specialWishes}</p>\n          <button\n            onClick={() => this.setState(state => ({ expanded: !state.expanded}))}\n            className={`arrow-button${expanded ? '--expanded' : ''}`}\n          ></button>\n        </div>\n        <button name='update' onClick={this.onButtonClick} className=\"wrapper-status\">\n          <p>Update</p>\n          <p>{this.props.status}</p>\n        </button>\n      </div>\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateStatus: (status, orderId) => dispatch(updateStatus(status, orderId))\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(OrderListItem);","import React, { Component } from 'react';\n\nimport OrderListItem from '../ui/orderListItem.js';\n\nimport '../styles/queue.css';\n\nclass Queue extends Component {\n  emitStatusUpdate = (orderId, nextStatus) => {\n    this.props.socket.emit('STATUS_UPDATE', orderId, nextStatus);\n  }\n  \n  render() {\n    return (\n      <div className=\"queue\">\n      {\n        !this.props.queue\n        ? <div>loading...</div>\n        : this.props.queue.map(list => {\n            return (\n              <OrderListItem\n                key={list.orderId}\n                orderId={list.orderId}\n                items={list.items}\n                status={list.status}\n                specialWishes={list.specialWishes}\n                queue={this.props.queue}\n                emitStatusUpdate={nextStatus => this.emitStatusUpdate(list.orderId, nextStatus)}\n              />\n            )\n          })\n      }\n      </div>  \n    );\n  }\n}\n\nexport default Queue;\n","import React from 'react';\nimport \"../styles/display.css\";\n\nconst Display = ({ queue, history }) => {\n  const lastItem = history[history.length - 1] ? `#${history[history.length - 1].orderId}` : '';\n  return (<div className=\"display\">\n    <div className=\"pickup\">\n      <h1>Ready for pickup</h1>\n      {\n        queue\n        .filter(order => order.status === 'ready for pickup')\n        .map(order => <h2>#{order.orderId}</h2>)\n      }\n    </div>\n    <div className=\"right-side\">\n      <div className=\"last-delivered\">\n        <h1>Last delivered</h1>\n        <h2>{lastItem}</h2>\n      </div>\n      <div className=\"upcoming\">\n        <h1>Upcoming</h1>\n        {\n          queue\n          .filter(order => order.status === 'in preparation')\n          .map(order => <h2>#{order.orderId}</h2>)\n        }\n      </div>\n    </div>\n  </div>);\n}\n\nexport default Display;\n","import React, { Component } from 'react';\nimport QRCode from 'qrcode.react';\nimport '../styles/qrcode.css';\n\nclass QrCode extends Component {  \n  QRCode_URL = `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_PORT}/${this.props.barId}`\n  render() {\n    return (\n      <div className=\"qrcode\">\n        <div className=\"qrcode__url\">{this.QRCode_URL}</div>\n        <QRCode size={500} value={this.QRCode_URL} />\n      </div>\n    );\n  }\n}\n\nexport default QrCode;","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport '../styles/popup.css';\n\nconst PopUp = ({page, isOpen, updatePage, toggleBlocked, logout}) => (\n  <div className=\"wrapper\">\n    <Popup\n      contentStyle={{\n        width: \"100%\",\n        padding: 0,\n        margin: 0,\n        border: \"none\"\n      }}\n      overlayStyle={{\n        background: \"none\",\n        padding: 0,\n        margin: 0,\n        border: \"none\"\n      }}\n      offsetY={-8}\n      arrowStyle={{\n        height: 0,\n      }}\n      trigger={<button className=\"btn\"></button>}\n      closeOnDocumentClick\n      position=\"top center\">\n      <div className=\"menu\">\n        <button className={`menu-item${page === 'MAIN' ? '--selected' : ''}`} onClick={() => updatePage('MAIN')}>Now</button>\n        <button className={`menu-item${page === 'HISTORY' ? '--selected' : ''}`} onClick={() => updatePage('HISTORY')}>History</button>\n        <button className={`menu-item${page === 'DISPLAY' ? '--selected' : ''}`} onClick={() => updatePage('DISPLAY')}>Queue</button>\n        <button className={`menu-item${page === 'QRCODE' ? '--selected' : ''}`} onClick={() => updatePage('QRCODE')}>QR Code</button>\n        <button className={`menu-item__block${!isOpen ? '--selected' : ''}`} onClick={() => toggleBlocked()}>{`${isOpen ? 'Block' : 'Open'} Orders`}</button>\n        <button className={`menu-item__logout`} onClick={logout}>Log Out</button>\n      </div>\n    </Popup>\n  </div>\n);\n\nexport default PopUp;","import React, { Component } from 'react';\nimport './dashboard.css';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\n\nimport { updateQueue, addOrder, updateStatus, updatePage, setOpen } from './store/actions';\n\nimport Queue from './containers/queue';\nimport Display from './containers/display';\nimport QrCode from './containers/qrCode';\nimport PopUp from './ui/popup.js';\n\nclass Dashboard extends Component {\n  url = `/staff/${this.props.barId}`;\n\n  switch = {\n    MAIN: () => (\n      <Queue\n        socket={this.socket}\n        queue={this.props.queue}  \n      />\n    ),\n    HISTORY: () => (\n      <Queue\n        socket={this.socket}\n        queue={this.props.history}  \n      />\n    ),\n    DISPLAY: () => (\n      <Display \n        socket={this.socket}\n        queue={this.props.queue}\n        history={this.props.history}\n      />\n    ),\n    QRCODE: () => (\n      <QrCode barId={this.props.barId} />\n    )\n  }\n\n  componentDidMount() {\n  }\n\n  listAllOrders = () => {\n    axios.get(`${this.url}/queue`, {\n      headers: {\n        \"Content-type\": \"application/json\",\n        authorization: `Bearer ${this.props.token}`\n      }\n    })\n     .then(res => {\n       const { queue } = res.data;\n       this.props.updateQueue(queue)\n     })\n  }\n\n  toggleBlocked = () => {\n    axios.post(`${this.url}/open`, {\n      open: !this.props.isOpen\n    }, {\n      headers: {\n        \"Content-type\": \"application/json\",\n        authorization: `Bearer ${this.props.token}`\n      }\n    })\n    .then(res => {\n      this.props.setOpen(res.data.open);\n    })\n  }\n  \n  componentDidMount = () => {\n    const { token, barId } = this.props;\n    this.listAllOrders();\n    this.socket = io(`/${barId}`, {\n      query: {\n        bar: `/${barId}`,\n        token\n      },\n    });\n\n    this.socket.on('NEW_ORDER', (newOrder) => {\n      console.log(newOrder);\n      this.props.addOrder(newOrder);\n    });\n\n    this.socket.on('STATUS_UPDATE', (orderId, status) => {\n      this.props.updateStatus(status, this.props.queue.concat(this.props.history).find(order => order.orderId === orderId));\n    });\n  }\n\n  closeSocket = () => {\n    this.socket.removeAllListeners();\n    this.socket.close();\n  }\n\n  componentWillUnmount = () => this.closeSocket();\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        { this.switch[this.props.page]() }\n        <PopUp logout={this.props.logout} page={this.props.page} isOpen={this.props.isOpen} updatePage={this.props.updatePage} toggleBlocked={this.toggleBlocked} />\n      </div>  \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    queue: state.queue,\n    history: state.history,\n    page: state.page,\n    isOpen: state.isOpen\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateQueue: (queue) => dispatch(updateQueue(queue)),\n    addOrder: (order) => dispatch(addOrder(order)),\n    updateStatus: (status, order) => dispatch(updateStatus(status, order)),\n    updatePage: (page) => dispatch(updatePage(page)),\n    setOpen: (isOpen) => dispatch(setOpen(isOpen))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React, { Component } from 'react';\n\n\nimport '../styles/login.css';\n\nclass Login extends Component {\n\n  render() {\n    return (\n        <div className=\"login__wrapper\">\n          <form className=\"form\" onSubmit={this.props.onSubmit}>\n            <label className=\"label\">Enter your pin</label>\n            <input className=\"input\" name=\"pin\" type=\"password\" placeholder=\"Pin\" onChange={this.props.onChange} value={this.props.pin}/>\n            { this.props.loginMessage !== '' && <div className=\"login-message\" >{this.props.loginMessage}</div> }\n            <button className=\"submit\" type=\"submit\">Submit</button>\n          </form>\n        </div>\n    )\n  }\n}\n\n\nexport default Login;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Dashboard from './Dashboard';\nimport Login from './containers/login'\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    page: 'LOGIN',\n    pin: '',\n    token: null,\n    loginMessage: '',\n  }\n\n  switch = {\n    DASHBOARD: () => (\n      <Dashboard barId={this.barId} token={this.state.token} logout={this.logout} />\n    ),\n    LOGIN: () => (\n      <Login onChange={this.onChange} loginMessage={this.state.loginMessage} pin={this.state.pin} onSubmit={this.staffLogin}/>\n    )\n  }\n\n  onChange = (e) => {\n    this.setState({pin: e.target.value});\n  }\n\n  logout = (e) => {\n    this.setState({ token: null });\n    window.localStorage.clear();\n  }\n\n  staffLogin = (e) => {\n   e.preventDefault();\n   this.barId = window.location.pathname.replace('staff', '').replace(/\\//g, '');\n   const decoded = `${this.barId}:${this.state.pin}`\n   const encoded = btoa(decoded);\n    axios.get(`/staff/${this.barId}/code`, {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Basic ${encoded}`\n      }\n    })\n    .then(res => {\n      const { token } = res.data;\n      window.localStorage.setItem('token', token);\n      this.setState({ token });\n    })\n    .catch(err => {\n      this.setState({ loginMessage: err.response.data })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n         this.state.token\n         ? this.switch['DASHBOARD']()\n         : this.switch['LOGIN']()\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst initialState = {\n  queue: [],\n  history: [],\n  page: 'MAIN',\n  isOpen: true,\n}\n\nfunction queue (state = initialState.queue, action) {\n  switch (action.type) {\n    case 'UPDATE_QUEUE': {\n      return action.queue.filter(order => order.status !== 'delivered');\n    }\n    case 'ADD_ORDER': {\n      if (state.find(order => order.orderId === Number(action.order.orderId))) return state;\n      return state.concat(action.order);\n    }\n    case 'UPDATE_STATUS' : {\n      if (action.status === 'delivered') return state.filter(order => order.orderId !== action.order.orderId);\n      \n      const index = state.findIndex(order => order.orderId === action.order.orderId);\n      if (action.status !== 'delivered' && index === -1) return state.concat(action.order);\n      return state.map(order => {\n        if(order.orderId !== action.order.orderId) return order;\n        else return Object.assign({}, order, {status: action.status})\n      })\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction history (state = initialState.history, action) {\n  switch (action.type) {\n    case 'UPDATE_QUEUE': {\n      return action.queue.filter(order => order.status === 'delivered');\n    }\n    case 'UPDATE_STATUS' : {\n      const index = state.findIndex(order => order.orderId === action.order.orderId);\n      if (action.status === 'delivered' && index === -1) {\n        return state.concat(Object.assign({}, action.order, {status: action.status}));\n      } else if (action.status !== 'delivered' && index !== -1) {\n        return state.filter((order, i) => i !== index);\n      }\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction page (state = initialState.page, action) {\n  switch (action.type) {\n    case 'UPDATE_PAGE': {\n      return action.page;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction isOpen (state = initialState.isOpen, action) {\n  switch (action.type) {\n    case 'SET_OPEN': {\n      return action.isOpen;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default combineReducers({\n  queue, history, page, isOpen\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './store/reducers';\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}